{# template de l'objet ODDropzone #}
{% var file = objet.servFiles %}

<div role="content" data-gui-object="1" id="{{ objet.id }}">
    <!-- widget edit box -->
    <div class="jarviswidget-editbox">
        <!-- This area used as dropdown edit box -->
    </div>
    <!-- end widget edit box -->
    <!-- -->
    <!-- widget content -->
    <div class="widget-body">
        <form action="/objets/affiche/html" class="dropzone dz-clickable" id="aaa{% objet.id %}">
            <input type="hidden"  name="lenght" value="ok">
            <input type="hidden" id="data{% objet.id %}" name="data" value="">
            <input type="hidden" name="event" value="<?php echo \Objets\Event::EVT_DROP_IN; ?>">
            <input type="hidden"  name="objetSource" value="{% objet.id %}">
            <div class="dz-default dz-message"><span>Déposer vos fichiers ...</span></div>
        </form>
    </div>
    <!-- end widget content -->
</div>
{% headScript()->captureStart() %}

{% if objet.filters is not empty %}
    {% set acceptedFiles = "" %}
    {% for nane, filter in objet.filters %}
        {%  acceptedFiles = acceptedFiles ~ filter ~ "," %}
    {% endfor %}
    {% acceptedFiles.substr(, 0, acceptedFiles|length - 1) %}
{% endif %}
$(document).ready(function() {

    Dropzone.autoDiscover = false;
    var {% objet.id %}Dropzone = new Dropzone("#aaa{% objet.id %}", {
        url             : "{{ url('upload_oddropzone') }}",
        {% if acceptedFiles is not empty %}
        acceptedFiles   : "{{ acceptedFiles}}",
        {% endif %}
        dictRemoveFile  : "Sup. fichier",
        dictFileTooBig  : "Fichier trop volumineux ({{filesize}}MB)  Max : {{maxFilesize}}MB.",
        dictInvalidFileType: "You can't upload files of this type.",
        dictResponseError: "Server responded with {{statusCode}} code.",
        dictCancelUpload: "Annuler téléchargement",
        maxFilesize: {% objet.maxFileSize %},
        dictResponseError: 'Erreur téléchargement !',
        paramName : "file",
        complete: function(file) {
            html = file.xhr.response;
            objetAjaxParser(html);
        },
        init: function() {
            var myDropzone = this;

            {% loadFiles = objet.loadFiles %}
            {% if loadFiles is not empty and loadFiles|length > 0 %}

                var json = '{% loadFiles|json_encode() %}';
            var loadedFiles = JSON.parse(json);

            console.log('loadedFiles');
            console.log(loadedFiles);
            console.log('loadedFiles');

            for (var i = 0; i < loadedFiles.length; i++) {
                var mockFile = {
                    name: loadedFiles[i].name,
                    size: loadedFiles[i].size,
                };
                console.log(mockFile);
                var viewButton   = Dropzone.createElement("<a href='/blob/view/"+loadedFiles[i].idBlob+"' target='_blank' class='btn btn-info btn-xs' style='margin-left: 2px;margin-right: 2px'><i class='fa fa-eye'></i></a>");
                var downloadButton   = Dropzone.createElement("<a href='/blob/download/"+loadedFiles[i].idBlob+"' class='btn btn-primary btn-xs' style='margin-left: 2px;margin-right: 2px;'><i class='fa fa-download'></i></a>");
                var removeButton = Dropzone.createElement("<button class='btn btn-warning btn-xs' style='margin-left: 2px;margin-right: 2px' ><i class='fa fa-trash-o'></i></button>");
                var url  =  "/blob/view/"+loadedFiles[i].idBlob;
                var urld  =  "/blob/download/"+loadedFiles[i].idBlob;

                removeButton.addEventListener("click", function(e) {
                    e.preventDefault();
                    e.stopPropagation();

                    var idObject = $(this).parent().attr('id');
                    console.log('removeButton clickEvent');
                    console.log(idObject);

                    $('#{% objet.id %}').data("selected", idObject);

                    <?php echo $this->obj->getEventJs(\Objets\Event::EVT_DROP_OUT); ?>
                });

                myDropzone.emit("addedfile", mockFile);
                myDropzone.emit("thumbnail", mockFile, loadedFiles[i].url);
                myDropzone.emit("success", mockFile);

                var element = $(mockFile.previewElement).find('.dz-details');
                element.parent().attr('id', loadedFiles[i].name);
                <?php if ($properties['view'] === true)     { ?>element.parent().append(viewButton);    <?php } ?>
                <?php if ($properties['download'] === true) { ?>element.parent().append(downloadButton);<?php } ?>
                <?php if ($properties['remove'] === true)   { ?>element.parent().append(removeButton);  <?php } ?>

            {%endif%}

            this.on("error", function(file, message) {
                alert(message);
                this.removeFile(file);
            });
        },

        accept: function(file, done) {

            var fileName = file.name;
            var arrayFile = { 'name':file.name,'type':file.type,'size':file.size };
            var arrayFiles = { fileName: arrayFile };

            $('#{% objet.id %}').data("files", arrayFiles);

            $("#data{% objet.id %}").val( JSON.stringify($( "#{% objet.id %}" ).data()) );

            if (file.name == "justinbieber.jpg") {
                done("Naha, you don't.");
            } else {
               done("");
            }
        }
    });

    {% if objet.state == true %}
    {% objet.id %}Dropzone.disable();
    {% else %}
    {% objet.id %}Dropzone.enable();
    {% endif %}

});

{% headScript()->captureEnd() %}